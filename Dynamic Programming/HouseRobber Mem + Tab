class Solution {
    public int rob(int[] nums) {
        int[] dp = new int[nums.length+1];
        Arrays.fill(dp , -1);
      return  hrob2(nums, nums.length-1);
    }

    public int hrob(int[] nums, int index, int[] dp){
        if(index == 0) return nums[index];

        if(index < 0) return 0;

        if(dp[index] != -1) return dp[index];

        int pick = nums[index] + hrob(nums, index-2, dp);

        int notpick = 0 + hrob(nums, index-1, dp);

        return dp[index] = Math.max(pick, notpick);
    }

    public int hrob2(int[] nums, int indexx){
        int[] dp = new int[nums.length+1];
        dp[0] = nums[0];

        for(int index = 1; index < nums.length; index++){

            int pick = nums[index];
            if(index > 1)
                pick += dp[index-2];

            int notpick = 0 + dp[index-1];

            dp[index] = Math.max(pick, notpick);
        }

        return dp[indexx];
    }
}
